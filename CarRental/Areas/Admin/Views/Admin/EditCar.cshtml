@using CarRental.Entities
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model CarRental.Models.CarViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditCar</title>
</head>
<body>

    <h4>CarViewModel</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="EditCar" asp-controller="Admin" asp-area="Admin" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Id" class="control-label"></label>
                    <input asp-for="Id" class="form-control" />
                    <span asp-validation-for="Id" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Color" class="control-label"></label>
                    <input asp-for="Color" class="form-control" />
                    <span asp-validation-for="Color" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Model" class="control-label"></label>
                    <input asp-for="Model" class="form-control" />
                    <span asp-validation-for="Model" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="RentalPrice" class="control-label"></label>
                    <input asp-for="RentalPrice" class="form-control" />
                    <span asp-validation-for="RentalPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Class" class="control-label"></label>
                    <select asp-for="Class" asp-items="Html.GetEnumSelectList<ClassCar>()"></select>
                    <span asp-validation-for="Class" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Avatar" class="control-label"></label>
                    <input type="file" asp-for="Avatar" class="btn" />
                    <span asp-validation-for="Avatar" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Image" class="control-label"></label>
                    <div>
                        @if (Model.Image != null)
                        {

                            <img style='width:800px; height:600px;' src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Image))" />
                        }
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Сохранить" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="GetAllCars" asp-controller="Admin" asp-area="Admin" class = "btn btn-outline-info">К списку доступных</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
        // переопределение валидации на стороне клиента
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
        </script>
    }
</body>
</html>
