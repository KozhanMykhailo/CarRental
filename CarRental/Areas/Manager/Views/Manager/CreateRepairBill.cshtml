@model CarRental.Entities.Bill

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreateRepairBill</title>
</head>
<body>

    <h4>Счет за ремонт</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            @using (Html.BeginForm(FormMethod.Post))
            {
                <div class="form-group">
                    <label>Цена за ремонт</label>
                    @Html.EditorFor(bill => bill.ToPay)
                    @Html.ValidationMessageFor(bill => bill.ToPay)
                </div>
                <input type="submit" value="Создать" class="btn btn-outline-success" />
            }
        </div>
    </div>
    <div>
        @Html.ActionLink("К списку заказов", "Orders", new { area = "Manager", controller = "Manager" }, new { @class = "btn btn-outline-info" })
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
        // переопределение валидации на стороне клиента
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
        </script>
    }
</body>
</html>
